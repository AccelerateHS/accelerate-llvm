name:                   accelerate-llvm
version:                1.3.0.0
cabal-version:          >= 1.10
tested-with:            GHC >= 8.6
build-type:             Simple

synopsis:               Accelerate backend component generating LLVM IR
description:
    This library implements direct LLVM IR generation for the /Accelerate/
    language. For further information, refer to the main
    <http://hackage.haskell.org/package/accelerate accelerate> package.
    .
    [/Dependencies/]
    .
    Haskell dependencies are available from Hackage. The following external
    libraries are alse required:
    .
      * <http://llvm.org LLVM>
    .
      * <http://sourceware.org/libffi/ libFFI> (if using <http://hackage.haskell.org/package/accelerate-llvm-native accelerate-llvm-native>)
    .
      * <https://developer.nvidia.com/cuda-downloads CUDA> (if using <http://hackage.haskell.org/package/accelerate-llvm-ptx accelerate-llvm-ptx>)
    .
    [/Installing LLVM/]
    .
    /Homebrew/
    .
    Example using Homebrew on macOS:
    .
    > brew install llvm-hs/llvm/llvm-9
    .
    /Debian & Ubuntu/
    .
    For Debian/Ubuntu based Linux distributions, the LLVM.org website provides
    binary distribution packages. Check <http://apt.llvm.org apt.llvm.org> for
    instructions for adding the correct package database for your OS version,
    and then:
    .
    > apt-get install llvm-9-dev
    .
    /Building from source/
    .
    If your OS does not have an appropriate LLVM distribution available, you can
    also build from source. Detailed build instructions are available on
    <http://releases.llvm.org/8.0.0/docs/CMake.html LLVM.org>. Make sure to
    include the cmake build options
    @-DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_LINK_LLVM_DYLIB=ON@ so that the @libLLVM@
    shared library will be built.
    .
    If using the @accelerate-llvm-ptx@ backend, also ensure that the
    @LLVM_TARGETS_TO_BUILD@ option includes the @NVPTX@ target (if not
    specified, all targets are built).
    .

license:                BSD3
license-file:           LICENSE
author:                 Trevor L. McDonell
maintainer:             Trevor L. McDonell <trevor.mcdonell@gmail.com>
bug-reports:            https://github.com/AccelerateHS/accelerate/issues
category:               Accelerate, Compilers/Interpreters, Concurrency, Data, Parallelism

extra-source-files:
    CHANGELOG.md
    README.md


-- Build configuration
-- -------------------

Library
  exposed-modules:
    -- Accelerate-LLVM middle-end
    Data.Array.Accelerate.LLVM.AST
    Data.Array.Accelerate.LLVM.Array.Data
    Data.Array.Accelerate.LLVM.CodeGen
    Data.Array.Accelerate.LLVM.CodeGen.Arithmetic
    Data.Array.Accelerate.LLVM.CodeGen.Array
    Data.Array.Accelerate.LLVM.CodeGen.Base
    Data.Array.Accelerate.LLVM.CodeGen.Constant
    Data.Array.Accelerate.LLVM.CodeGen.Environment
    Data.Array.Accelerate.LLVM.CodeGen.Exp
    Data.Array.Accelerate.LLVM.CodeGen.IR
    Data.Array.Accelerate.LLVM.CodeGen.Intrinsic
    Data.Array.Accelerate.LLVM.CodeGen.Loop
    Data.Array.Accelerate.LLVM.CodeGen.Module
    Data.Array.Accelerate.LLVM.CodeGen.Monad
    Data.Array.Accelerate.LLVM.CodeGen.Permute
    Data.Array.Accelerate.LLVM.CodeGen.Ptr
    Data.Array.Accelerate.LLVM.CodeGen.Skeleton
    Data.Array.Accelerate.LLVM.CodeGen.Stencil
    Data.Array.Accelerate.LLVM.CodeGen.Sugar
    Data.Array.Accelerate.LLVM.CodeGen.Type
    Data.Array.Accelerate.LLVM.Compile
    Data.Array.Accelerate.LLVM.Compile.Cache
    Data.Array.Accelerate.LLVM.Embed
    Data.Array.Accelerate.LLVM.Execute
    Data.Array.Accelerate.LLVM.Execute.Async
    Data.Array.Accelerate.LLVM.Execute.Environment
    Data.Array.Accelerate.LLVM.Execute.Marshal
    Data.Array.Accelerate.LLVM.Extra
    Data.Array.Accelerate.LLVM.Foreign
    Data.Array.Accelerate.LLVM.Link
    Data.Array.Accelerate.LLVM.Link.Cache
    Data.Array.Accelerate.LLVM.State
    Data.Array.Accelerate.LLVM.Target

    -- LLVM code generation
    LLVM.AST.Type.AddrSpace
    LLVM.AST.Type.Constant
    LLVM.AST.Type.Downcast
    LLVM.AST.Type.Flags
    LLVM.AST.Type.Function
    LLVM.AST.Type.Global
    LLVM.AST.Type.InlineAssembly
    LLVM.AST.Type.Instruction
    LLVM.AST.Type.Instruction.Atomic
    LLVM.AST.Type.Instruction.Compare
    LLVM.AST.Type.Instruction.RMW
    LLVM.AST.Type.Instruction.Volatile
    LLVM.AST.Type.Metadata
    LLVM.AST.Type.Name
    LLVM.AST.Type.Operand
    LLVM.AST.Type.Representation
    LLVM.AST.Type.Terminator

    -- Extras
    Data.ByteString.Short.Char8
    Data.ByteString.Short.Extra

  other-modules:
    Paths_accelerate_llvm

  build-depends:
          base                          >= 4.10 && < 5
        , accelerate                    == 1.3.*
        , bytestring                    >= 0.10.4
        , constraints                   >= 0.9
        , containers                    >= 0.5
        , data-default-class            >= 0.0.1
        , deepseq                       >= 1.3
        , directory                     >= 1.2.3
        , dlist                         >= 0.6
        , exceptions                    >= 0.6
        , filepath                      >= 1.0
        , llvm-hs                       >= 4.1 && < 9.1
        , llvm-hs-pure                  >= 4.1 && < 9.1
        , mtl                           >= 2.0
        , primitive                     >= 0.6.4
        , template-haskell
        , unordered-containers          >= 0.2
        , vector                        >= 0.10

  hs-source-dirs:
        src

  default-language:
        Haskell2010

  ghc-options:
        -O2
        -Wall
        -fwarn-tabs

  ghc-prof-options:
        -caf-all
        -auto-all

  if impl(ghc >= 8.0)
    ghc-options:
        -Wmissed-specialisations

source-repository head
  type:                 git
  location:             https://github.com/AccelerateHS/accelerate-llvm.git

source-repository this
  type:                 git
  tag:                  v1.3.0.0
  location:             https://github.com/AccelerateHS/accelerate-llvm.git

-- vim: nospell
